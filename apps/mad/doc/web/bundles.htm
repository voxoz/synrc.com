<!DOCTYPE html>
<html >
<head>

  <link rel=stylesheet type="text/css" href="//synrc.com/synrc.css?v=3">
  <meta name="Author" content="5HT">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta property="og:image" content="images/s_64.png"/>
  <meta http-equiv="X-UA-Compatible" content="IE=IE10,chrome=1" />
  <title>MAD Bundles
</title>
</head>
<body >
<!--HEVEA command line is: hevea bundles.tex -o bundles.htm -->
<!--CUT STYLE article--><!--HTMLHEAD-->

<div class="nonselectedwrapper white" style="padding: 10px 0px 10px 0px;margin: 0px 0px 10px 0px;">
    <a href="//synrc.com/">
    <img style="float:left; margin-left: 55px; margin-top: 5px; margin-bottom:-5px;" src="//synrc.com/images/synrc.png" border="0"></a>

    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top" style="display:none;margin-top:39px;">
      <input type="hidden" name="cmd" value="_s-xclick">
      <input type="hidden" name="hosted_button_id" value="P8WQHAQK5HWWW">
      <input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" border="0" name="submit" style="width:74px;margin-top:0px;">
     </form>

    <div align=right style="float:right;width:700px;height: auto; margin: 20px 50px 0px 0px;">
          <script type="text/javascript">

        var args = (window.location).toString().split('/');
        var page_name = args[args.length-1];
        var menu = {'//synrc.com/index.htm':    'Home',
                    '//synrc.com/research.htm': 'Showcase',
                    '//synrc.com/apps/':   'Apps',
                    '//synrc.com/feedback.htm': 'Contacts' };

        Object.keys(menu).forEach(function (key) {
            if (page_name == key) { document.write('<div class="menu" style="font-weight: bold;">'+menu[key]+'</div>'); }
            else { document.write('<a class="menu" href="'+key+'">'+menu[key]+'</a>'); }
        });

        </script>
    </div>
</div>

<hr size="1">

<!--ENDHTML-->
<!--CUT DEF section 1 --><div class="nonselectedwrapper">
<div class="article">
<div class="toc">
<!--TOC section id="sec1" TOC-->
<h2 id="sec1" class="section">TOC</h2><!--SEC END -->
<!--TOC paragraph id="sec2" -->
<!--SEC END --><p>
<a href="http://synrc.com/apps/mad/doc/web">Overview</a> <br>

<a href="http://synrc.com/apps/mad/doc/web/setup.htm">1. Setup</a> <br>

<a href="http://synrc.com/apps/mad/doc/web/deps.htm">2. Deps</a> <br>

<a href="http://synrc.com/apps/mad/doc/web/config.htm">3. Configuration</a> <br>

<a href="http://synrc.com/apps/mad/doc/web/commands.htm">4. Commands</a> <br>

<a href="http://synrc.com/apps/mad/doc/web/bundles.htm">5. Bundles</a> <br>

<a href="http://synrc.com/apps/mad/doc/book.pdf">Download PDF</a> <br>

</p></div>

<div class="articlecol">

<!--TOC section id="sec3" Container Bundles-->
<h2 id="sec3" class="section">Container Bundles</h2><!--SEC END -->
<!--TOC subsection id="sec4" ESCRIPT Bundles-->
<h3 id="sec4" class="subsection">ESCRIPT Bundles</h3><!--SEC END --><p>The key feature of mad is ability to create single-file bundled web sites.
Thus making dream to boot simpler than node.js come true.
This bundle target is ready to run on Windows, Linux and Mac.</p><p>To make this possible we implemented a zip filesytem inside escript.
mad packages priv directories along with ebin and configs.
You can redefine each file in zip fs inside target
escript by creation the copy with same path locally near escript.
After launch all files are copied to ETS.
N2O also comes with custom cowboy static handler that is able to
read static files from this cached ETS filesystem.
Also bundle are compatible with active online realoading and recompilation.</p><p>E.g. you main create a single file site with:</p><div class="lstlisting">    # mad bundle app_name</div><p>app_name shoul be the same as a valid Erlang module, with app_module:main/1
function defined, which will boot up the bundle. This function could be like that:</p><div class="lstlisting">     -module(app_name).
     main(Params) -&gt; mad_repl:sh(Params).</div>
<!--TOC subsection id="sec5" BEAM ERTS Releases-->
<h3 id="sec5" class="subsection">BEAM ERTS Releases</h3><!--SEC END --><p>As you may know you can create OTP releases with
reltool (rebar generate) or systools (relx). mad creates releases boot
script with systools and pack tra by itself.</p><div class="lstlisting">    # mad release beam sample</div>
<!--TOC subsection id="sec6" LING Unikernels-->
<h3 id="sec6" class="subsection">LING Unikernels</h3><!--SEC END --><p>Sample rebar.config for your application you want to go unikernel:</p><div class="lstlisting">    {deps_dir,"deps"}.
    {deps, [{ling,"master"},{sh,"1.9"}]}.</div><p>Now you should build LING/posix:</p><div class="lstlisting">    $ mad dep
    $ cd deps/ling
    $ ARCH=posix make</div><p>Now pack vmling.o, your OTP apps and rest static to single-file LING bundle with VM inside.</p><div class="lstlisting">    $ mad release ling mad
    Ling Params: []
    ARCH: posix_x86
    Bundle Name: mad
    System: [compiler,syntax_tools,sasl,tools,mnesia,reltool,xmerl,crypto,kernel,
             stdlib,wx,webtool,ssl,runtime_tools,public_key,observer,inets,asn1,
             et,eunit,hipe,os_mon]
    Apps: [kernel,stdlib,sh,mad]
    Overlay: ["crypto.beam","9p.beam","9p_auth.beam","9p_info.beam",
              "9p_mounter.beam","9p_server.beam","9p_tcp.beam","9p_zero.beam",
              "disk.beam","disk_server.beam","embedded_export.beam",
              "goo_export.beam","goofs.beam","hipe_unified_loader.beam",
              "inet_config.beam","kernel.beam","ling_bifs.beam","ling_code.beam",
              "ling_disasm.beam","ling_iops.beam","ling_iopvars.beam",
              "ling_lib.beam","net_vif.beam","os.beam","prim_file.beam",
              "user_drv.beam","os_mon.beam","dets.beam","filename.beam",
              "maps.beam","unicode.beam","zlib.beam"]
    Bucks: [{boot,"/boot",2},
            {os_mon,"/erlang/lib/os_mon/ebin",1},
            {crypto,"/erlang/lib/crypto/ebin",1},
            {kernel,"/erlang/lib/kernel/ebin",90},
            {stdlib,"/erlang/lib/stdlib/ebin",85},
            {sh,"/erlang/lib/sh/ebin",6},
            {mad,"/erlang/lib/mad/ebin",43}]
    Initializing EMBED.FS:
    Mount View:
     /boot /boot
    /erlang/lib/os_mon/ebin /os_mon
    /erlang/lib/crypto/ebin /crypto
    /erlang/lib/kernel/ebin /kernel
    /erlang/lib/stdlib/ebin /stdlib
    /erlang/lib/sh/ebin /sh
    /erlang/lib/mad/ebin /mad
    Creating EMBED.FS C file: ...ok
    Compilation of Filesystem object: ...ok
    Linking Image: ok</div><p>Run it:</p><div class="lstlisting">    $ rlwrap ./image.img
    Erlang [ling-0.5]

    Eshell V6.3  (abort with ^G)
    1&gt; application:which_applications().
    [{mad,"MAD VXZ Build Tool","2.2"},
     {sh,"VXZ SH Executor","0.9"},
     {stdlib,"ERTS  CXC 138 10","2.2"},
     {kernel,"ERTS  CXC 138 10","3.0.3"}]</div>
<!--TOC subsection id="sec7" Docker-compatible RUNC Containers-->
<h3 id="sec7" class="subsection">Docker-compatible RUNC Containers</h3><!--SEC END --><p>Creating runc-complatible container is simple:</p><div class="lstlisting">    # mad release runc sample</div>
<!--TOC subsection id="sec8" Makefiles with OTP.MK-->
<h3 id="sec8" class="subsection">Makefiles with OTP.MK</h3><!--SEC END --><p>OTP.MK is a tiny 50 lines Makefile that allows to start your set
of application using run_erl and to_erl tools from OTP distribution.
We use that way in poduction. This is the best option also in
development mode because all directory structure is open and mutable,
so you can reload modified files and perform recompilation on the fly.</p><p>It uses the original code to fast resolve dependencies into the right
boot sequence to start. If you want more powerful Makefile-based erlang
package management you may take a look onto ERLANG.MK by Nine Nines.</p><div class="lstlisting">    # make console</div><p>

    <!--div id="disqus_thread"></div>
    <script type="text/javascript">
        var disqus_shortname = 'synrc'; // required: replace example with your forum shortname
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a-->


</p></div>
</div>
</div><div class="clear">Â </div><!--CUT END -->
<!--HTMLFOOT-->

<div class="nonselectedwrapper">
<div class="verywidecol">

    <div style="width:100%;height:300px;float:left;font-size:16pt;" align=center>
    	<hr size=1>
    	<br><br><br>
        <a href="//synrc.com/news/index.htm">Events</a> |
    	<a href="//synrc.com/privacy.htm">Privacy Policy</a> |
        <a href="//synrc.com/feedback.htm">Feedback</a> |
        <a href="//synrc.com/brandbook.htm">Brandbook</a><br>
    	Copyright &copy; 2005&ndash;2018 <a href="//synrc.com/index.htm"> Synrc Research Center s.r.o.</a>
    </div>

</div>
</div>


<div class="clear"></div>

<script type="text/javascript">

  var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29227518-1']);
      _gaq.push(['_trackPageview']);
      
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                      })();
                      
                      </script>

<script type="text/javascript" src="//synrc.com/hi.js"></script>
<!--ENDHTML-->
</body>
</html>
