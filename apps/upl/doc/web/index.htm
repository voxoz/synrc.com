<!DOCTYPE html>
<html >
<head>

  <link rel=stylesheet type="text/css" href="//synrc.com/synrc.css?v=3">
  <meta name="Author" content="5HT">
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta property="og:image" content="images/s_64.png"/>
  <meta http-equiv="X-UA-Compatible" content="IE=IE10,chrome=1" />
  <title>UPL
</title>
</head>
<body >
<!--HEVEA command line is: hevea index.tex -o index.htm -->
<!--CUT STYLE article--><!--HTMLHEAD-->

<div class="nonselectedwrapper white" style="padding: 10px 0px 10px 0px;margin: 0px 0px 10px 0px;">
    <a href="//synrc.com/">
    <img style="float:left; margin-left: 55px; margin-top: 5px; margin-bottom:-5px;" src="//synrc.com/images/synrc.png" border="0"></a>

    <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_top" style="display:none;margin-top:39px;">
      <input type="hidden" name="cmd" value="_s-xclick">
      <input type="hidden" name="hosted_button_id" value="P8WQHAQK5HWWW">
      <input type="image" src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" border="0" name="submit" style="width:74px;margin-top:0px;">
     </form>

    <div align=right style="float:right;width:700px;height: auto; margin: 20px 50px 0px 0px;">
          <script type="text/javascript">

        var args = (window.location).toString().split('/');
        var page_name = args[args.length-1];
        var menu = {'//synrc.com/index.htm':    'Home',
                    '//synrc.com/research.htm': 'Showcase',
                    '//synrc.com/apps/':   'Apps',
                    '//synrc.com/feedback.htm': 'Contacts' };

        Object.keys(menu).forEach(function (key) {
            if (page_name == key) { document.write('<div class="menu" style="font-weight: bold;">'+menu[key]+'</div>'); }
            else { document.write('<a class="menu" href="'+key+'">'+menu[key]+'</a>'); }
        });

        </script>
    </div>
</div>

<hr size="1">

<!--ENDHTML-->
<!--CUT DEF section 1 --><div class="nonselectedwrapper">
<div class="article">

<div class="articlecol">

<!--TOC section id="sec1" UPL: Universal Processing Language-->
<h2 id="sec1" class="section">UPL: Universal Processing Language</h2><!--SEC END -->
<!--TOC subsection id="sec2" History-->
<h3 id="sec2" class="subsection">History</h3><!--SEC END --><p>Pocessing systems are using manually crafted application
relays to handle card processing business rules. Being defined by business
analysts these rules are fallen down to engineering teams informally.
Approach we provide pushes card processing to solid background in a form
of domain specific language common for all card plans analytics departments.</p><p>Having compact language we can formally build various translators
for particular customers and existing processing systems. At the same time
we provide reference back-end Erlang system implementation
for transactions processing. Also DSL gives us a natural and easy
verification strategies and compactifications.</p><div class="center">Listing 1: Deposit Program</div><p><br>
</p><div class="lstlisting">    program Deposit_Plus UAH
    include 'PB-CASHBACK'
    deposit duration range monthly 1 -&gt; 20%
                           monthly 3 -&gt; 22%
                           monthly 6 -&gt; 22%
                           annual 23%
            withdraw disabled
            auto
            charge enabled monthly limit max 20000
            monthly 1% of amount to account 'bonus'
            monthly 15% name 'tax' of deposit
                        to account 'users/:client/tax'</div><p>This language could be easily extended to other domain areas like
internet payment processing, shopping mall bonus programs, mobile
operators tariff plans.</p>
<!--TOC subsection id="sec3" Objectives-->
<h3 id="sec3" class="subsection">Objectives</h3><!--SEC END --><p>The aim is to create small and compact language for payment
transaction processing. Underlying instrumentation
code should be KVS layer for storing transaction chains but
naturally should be extended to different backends like Java,
PL/SQL and other languages currently involved in banking card processing.
We have several criteria to satisfy:</p>
<!--TOC paragraph id="sec4" -->
<!--SEC END --><table style="border-spacing:6px;border-collapse:separate;" class="cellpading0"><tr><td style="text-align:left;white-space:nowrap" > <span style="font-weight:bold">English</span></td><td style="text-align:left;white-space:nowrap" >Self-explanatory </td></tr>
<tr><td style="text-align:left;white-space:nowrap" > <span style="font-weight:bold">Fasten </span></td><td style="text-align:left;white-space:nowrap" >Time-to-market </td></tr>
<tr><td style="text-align:left;white-space:nowrap" > <span style="font-weight:bold">Optimized</span></td><td style="text-align:left;white-space:nowrap" >Minimal Back-end Operations </td></tr>
<tr><td style="text-align:left;white-space:nowrap" > <span style="font-weight:bold">Verified</span></td><td style="text-align:left;white-space:nowrap" >No regular bugs. Only business logic. </td></tr>
<tr><td style="text-align:left;white-space:nowrap" > <span style="font-weight:bold">Taxonomy</span></td><td style="text-align:left;white-space:nowrap" >Sane structure for extensions
</td></tr>
</table>
<!--TOC subsection id="sec5" Operations-->
<h3 id="sec5" class="subsection">Operations</h3><!--SEC END -->
<!--TOC paragraph id="sec6" -->
<!--SEC END --><p>User Creation:</p><div class="lstlisting">    prepare user ':client'
        name     ':fullname'
        age      ':birth'
        phone    ':ph'
        document ':passport'
        accounts
            credit '/users/:client/credit' program 'PB-UNIVERSAL'
            account '/users/:client/:acc' program ':tariff'</div>
<!--TOC paragraph id="sec7" -->
<!--SEC END --><p>Process Transaction:</p><div class="lstlisting">    prepare transaction from account 'users/:client'
                          to account ':beneficiar'</div>
<!--TOC paragraph id="sec8" -->
<!--SEC END --><p>Notifying:</p><div class="lstlisting">    prepare event 'users/:client'</div>
<!--TOC subsection id="sec9" Programs-->
<h3 id="sec9" class="subsection">Programs</h3><!--SEC END --><p>Programs are tariff programs, set of rules that we plug to transaction processing.
It feels like set of filters triggered each time we fire money
movements on account with a given card defenition.</p><div class="center">Listing 2: BNF</div><p><br>
</p><div class="lstlisting">
    Program = program Name Currency Forms

    Form = limit Amount
         | grace Amount days
         | credit CreditRules
         | rate ChargeRule
         | version Amount
         | deposit DepositRules
         | accounts AccountList</div><p>Example:</p><div class="center">Listing 3: credit.card</div><p><br>
</p><div class="lstlisting">    program PLA_DEB USD
    limit 20000
    version 1.0
    credit monthly 10%</div><p>Programs are stored in its own space.</p><div class="lstlisting">    /programs/PB-UNIVERSAL.card
    /programs/PB-DEPOSIT-PLUS.card
    /programs/API.code
    /programs/UA.user</div>
<!--TOC subsection id="sec10" Language Forms-->
<h3 id="sec10" class="subsection">Language Forms</h3><!--SEC END --><p>Top level tariffs of billing rules are pluggable slangs that
share some common part of the languages. These common part we will
call language forms.</p><div class="center">Listing 4: BNF</div><p><br>
</p><div class="lstlisting">
       Direction = charge
                 | withdraw

      ChargeRule = Fixed + Percent
                   of &lt;amount | debt | credit | deposit | rate&gt;
                   limit &lt;min Amount&gt; | &lt;max Amount&gt;
                   name Name
                   to account Name

    Periodically = monthly Amount
                 | monthly Months -&gt; ChargeRule
                 | daily ChargeRule
                 | annual ChargeRule

         Account = &lt;credit | rate | deposit&gt; Name</div>
<!--TOC subsection id="sec11" Accounts-->
<h3 id="sec11" class="subsection">Accounts</h3><!--SEC END --><p>Enterprise Tree handles clients, accounts, transactions, programs, events.
Programs could be assigned to each node and fires atomatically on access.</p><div class="lstlisting">    /personal/:client
    /personal/:client/bonus
    /personal/:client/credit
    /personal/:client/deposit
    /personal/:client/rate</div>
<!--TOC subsection id="sec12" External Services-->
<h3 id="sec12" class="subsection">External Services</h3><!--SEC END --><p>External service has its own endpoints, and could be
addressed/mounted? to local system.</p><div class="lstlisting">    /external/visa/:client
    /external/master/:client
    /external/swift/:client
    /internet/paypal/:client
    /bonus/:client</div>
<!--TOC subsection id="sec13" Transactions-->
<h3 id="sec13" class="subsection">Transactions</h3><!--SEC END --><p>Transactions are stored per each client’s account.</p><div class="lstlisting">    /personal/:client/transactions</div>
<!--TOC subsection id="sec14" Deposit-->
<h3 id="sec14" class="subsection">Deposit</h3><!--SEC END --><p>Deposit program forms ususally provides such attributes of
account as duration, rate, withdraw locking, charge
limits, fee options and other deposit specific options.
Deposit forms usually have "deposit" account name.</p><div class="lstlisting">    Enabled = enabled | disabled

    Deposit = duration Periodically
            | duration range [Periodically]
            | withdraw Enabled
            | charge Enabled | charge Enabled Periodically
            | auto
            | final Periodically move from Id to Id
            | fee ChargeRule
            | Periodically</div>
<!--TOC subsection id="sec15" Credit-->
<h3 id="sec15" class="subsection">Credit</h3><!--SEC END --><p>Credit programs forms mainly provide transaction
filtering and other default account name "credit".</p><div class="lstlisting">    Credit = transaction [TransRule]
           | sratus Enabled Ammount
           | Periodically

 TransRule = cashin  Amount
           | wire    ChargeRule
           | cashout Amount</div><p>


    <!--div id="disqus_thread"></div>
    <script type="text/javascript">
        var disqus_shortname = 'synrc'; // required: replace example with your forum shortname
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
    <a href="https://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a-->


</p></div>
</div>
</div><div class="clear"> </div><!--CUT END -->
<!--HTMLFOOT-->

<div class="nonselectedwrapper">
<div class="verywidecol">

    <div style="width:100%;height:300px;float:left;font-size:16pt;" align=center>
    	<hr size=1>
    	<br><br><br>
        <a href="//synrc.com/news/index.htm">Events</a> |
    	<a href="//synrc.com/privacy.htm">Privacy Policy</a> |
        <a href="//synrc.com/feedback.htm">Feedback</a> |
        <a href="//synrc.com/brandbook.htm">Brandbook</a><br>
    	Copyright &copy; 2005&ndash;2018 <a href="//synrc.com/index.htm"> Synrc Research Center s.r.o.</a>
    </div>

</div>
</div>


<div class="clear"></div>

<script type="text/javascript">

  var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-29227518-1']);
      _gaq.push(['_trackPageview']);
      
        (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'https://www') + '.google-analytics.com/ga.js';
                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
                      })();
                      
                      </script>

<script type="text/javascript" src="//synrc.com/hi.js"></script>
<!--ENDHTML-->
</body>
</html>
